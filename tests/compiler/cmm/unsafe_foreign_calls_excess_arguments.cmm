// RUN: "$HC" -cpp -dcmm-lint -keep-s-file -c "$1" && cat "${1%%.*}.s" | FileCheck "$1" -check-prefix=CHECK-A64
// RUN: "$LN" -sf "$1" "${1%%.*}.c"
// RUN: "$CC" -DC -c "${1%%.*}.c" -o "${1%%.*}_stub.o"
// RUN: "$CC" "${1%%.*}.o" "${1%%.*}_stub.o" -o "${1%%.*}.exe"
// RUN: "$EXEC" "${1%%.*}.exe"

#if defined(C) // the C part
int mega_add(int a, int b, int c, int d, int e, int f, int g, int h, int i, int j, int k) {
    return a + b + c + d + e + f + g + h + i + j + k;
}
#else // the CMM part
#include "Cmm.h"
#include "Types.h"

// Let's ensure we can call functions with lots of arguments, and they are
// passed correctly.
main () {

    // create some fake stack space and assign to Sp.
    I64 sp;
    (sp) = foreign "C" malloc(1024);
    Sp = sp;

    I64 x, y;
    I64 a, b, c, d, e, f, g, h, i, j, k;
    a = 1; b = 2; c = 4; d = 8; e = 16; f = 32; g = 64; h = 128; i = 256; j = 512; k = 1024;

    // We have 3 excess arguments; thus we need 4 slots (32 bytes)
    // CHECK-A64: sub sp, sp, #32
    // CHECK-A64: add sp, sp, #32
    (y) = foreign "C" mega_add(a,b,c,d,e,f,g,h,i,j,k);
    x = a + b + c + d + e + f + g + h + i + j + k;

    foreign "C" exit(y != x);
}
#endif
